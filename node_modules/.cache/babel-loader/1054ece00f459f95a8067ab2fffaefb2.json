{"ast":null,"code":"var _jsxFileName = \"/Users/maggiemccausland/Documents/GitHub/react-project-four/src/components/login/SignupForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box, Button, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useIdentityContext } from \"react-netlify-identity-gotrue\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  // position: \"absolute\",\n  // top: \"50%\",\n  // left: \"50%\",\n  // transform: \"translate(-50%, -50%)\",\n  margin: \"5% auto\",\n  width: \"80%\",\n  maxWidth: \"500px\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\"\n};\n\nconst SignupForm = () => {\n  _s();\n\n  const history = useHistory();\n\n  const handleClose = () => history.push(\"/welcome\");\n\n  const identity = useIdentityContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: modalStyle,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          userName: \"Maggie\",\n          email: \"foo@example.com\",\n          password: \"password\"\n        },\n        validationSchema: Yup.object().shape({\n          userName: Yup.string().min(4, \"Must be at least 4 characters\").max(50, \"Must be less than 50 characters\").required(\"User name is required\"),\n          email: Yup.string().email(\"This must be a valid email\").max(100).required(\"Email required\"),\n          password: Yup.string().min(6, \"Password must have at least 6 characters\").max(50, \"Password should not exceed 50 characters\").required(\"Password required\")\n        }),\n        onSubmit: async (value, {\n          setErrors,\n          setStatus,\n          setSubmitting\n        }) => {\n          try {\n            setStatus({\n              success: true\n            });\n            setSubmitting(false);\n            await identity.signup({\n              email: value.email,\n              password: value.password,\n              user_metadata: {\n                full_name: value.userName\n              }\n            }).then(() => {\n              handleClose();\n              console.log(\"success\");\n            });\n          } catch (err) {\n            console.error(err);\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          } // finally {\n          //   handleClose();\n          // }\n\n        },\n        children: ({\n          errors,\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          isSubmitting,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            error: Boolean(touched.userName && errors.userName),\n            onBlur: handleBlur,\n            onChange: handleChange,\n            helperText: touched.userName && errors.userName,\n            value: values.userName,\n            fullWidth: true,\n            label: \"User Name\",\n            margin: \"normal\",\n            name: \"userName\",\n            type: \"text\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: Boolean(touched.email && errors.email),\n            onBlur: handleBlur,\n            onChange: handleChange,\n            helperText: touched.email && errors.email,\n            value: values.email,\n            fullWidth: true,\n            label: \"Email Address\",\n            margin: \"normal\",\n            name: \"email\",\n            type: \"email\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: Boolean(touched.password && errors.password),\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.password,\n            helperText: touched.password && errors.password,\n            fullWidth: true,\n            label: \"Password\",\n            margin: \"normal\",\n            name: \"password\",\n            type: \"password\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            fullWidth: true,\n            size: \"large\",\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"qYxquTfXPjGCElVRfIP3M/NwdQk=\", false, function () {\n  return [useHistory, useIdentityContext];\n});\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/Users/maggiemccausland/Documents/GitHub/react-project-four/src/components/login/SignupForm.js"],"names":["React","Box","Button","TextField","Formik","Yup","useHistory","useIdentityContext","modalStyle","margin","width","maxWidth","bgcolor","border","boxShadow","p","borderRadius","SignupForm","history","handleClose","push","identity","userName","email","password","object","shape","string","min","max","required","value","setErrors","setStatus","setSubmitting","success","signup","user_metadata","full_name","then","console","log","err","error","submit","message","errors","values","handleSubmit","handleBlur","handleChange","isSubmitting","touched","Boolean"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, Button, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport {useIdentityContext} from \"react-netlify-identity-gotrue\";\n\nconst modalStyle = {\n  // position: \"absolute\",\n  // top: \"50%\",\n  // left: \"50%\",\n  // transform: \"translate(-50%, -50%)\",\n  margin: \"5% auto\",\n  width: \"80%\",\n  maxWidth: \"500px\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\",\n};\n\nconst SignupForm = () => {\n  const history = useHistory();\n  const handleClose = () => history.push(\"/welcome\");\n  const identity = useIdentityContext();\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n      <Box sx={modalStyle}>\n        <Formik\n          initialValues={{\n            userName: \"Maggie\",\n            email: \"foo@example.com\",\n            password: \"password\",\n          }}\n          validationSchema={Yup.object().shape({\n            userName: Yup.string()\n              .min(4, \"Must be at least 4 characters\")\n              .max(50, \"Must be less than 50 characters\")\n              .required(\"User name is required\"),\n            email: Yup.string()\n              .email(\"This must be a valid email\")\n              .max(100)\n              .required(\"Email required\"),\n            password: Yup.string()\n              .min(6, \"Password must have at least 6 characters\")\n              .max(50, \"Password should not exceed 50 characters\")\n              .required(\"Password required\"),\n          })}\n          onSubmit={async (value, { setErrors, setStatus, setSubmitting }) => {\n            try {\n              setStatus({ success: true });\n              setSubmitting(false);\n              await identity.signup({\n                email: value.email, password: value.password, user_metadata: {\n                  full_name: value.userName\n                }\n              }).then(() => {\n                handleClose();\n                console.log(\"success\");\n              })\n            } catch (err) {\n              console.error(err);\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n            // finally {\n            //   handleClose();\n            // }\n          }}\n\n        >\n          {({\n            errors,\n            values,\n            handleSubmit,\n            handleBlur,\n            handleChange,\n            isSubmitting,\n            touched,\n          }) => (\n            <form noValidate onSubmit={handleSubmit}>\n              <TextField\n                error={Boolean(touched.userName && errors.userName)}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                helperText={touched.userName && errors.userName}\n                value={values.userName}\n                fullWidth\n                label=\"User Name\"\n                margin=\"normal\"\n                name=\"userName\"\n                type=\"text\"\n                variant=\"outlined\"\n              />\n              <TextField\n                error={Boolean(touched.email && errors.email)}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                helperText={touched.email && errors.email}\n                value={values.email}\n                fullWidth\n                label=\"Email Address\"\n                margin=\"normal\"\n                name=\"email\"\n                type=\"email\"\n                variant=\"outlined\"\n              />\n              <TextField\n                error={Boolean(touched.password && errors.password)}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.password}\n                helperText={touched.password && errors.password}\n                fullWidth\n                label=\"Password\"\n                margin=\"normal\"\n                name=\"password\"\n                type=\"password\"\n                variant=\"outlined\"\n              />\n              {/* {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )} */}\n\n              <Button\n                color=\"primary\"\n                fullWidth\n                size=\"large\"\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={isSubmitting}\n              >\n                Log In\n              </Button>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </div>\n  );\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}