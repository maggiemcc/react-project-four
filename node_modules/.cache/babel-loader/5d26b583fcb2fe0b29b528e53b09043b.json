{"ast":null,"code":"var _jsxFileName = \"/Users/maggiemccausland/Documents/GitHub/react-project-four/src/components/login/LoginForm.js\";\nimport React from 'react';\nimport { Box, Button, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  maxWidth: \"500px\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\"\n};\n\nconst LoginForm = props => {\n  // const { closeHandler } = props;\n  const handleClose = () => console.log('close now');\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: modalStyle,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"foo@example.com\",\n        password: \"password\"\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email(\"This must be a valid email\").max(100).required(\"Email required\"),\n        password: Yup.string().min(6, \"Password must have at least 6 characters\").max(50, \"Password should not exceed 50 characters\").required(\"Password required\")\n      }),\n      onSubmit: (value, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          console.log(\"success\");\n          setStatus({\n            success: true\n          });\n          setSubmitting(false);\n        } catch (err) {\n          console.error(err);\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        } finally {\n          // closeHandler();\n          handleClose();\n        }\n      },\n      children: ({\n        errors,\n        values,\n        handleSubmit,\n        handleBlur,\n        handleChange,\n        isSubmitting,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(touched.email && errors.email),\n          onBlur: handleBlur,\n          onChange: handleChange,\n          helperText: touched.email && errors.email,\n          value: values.email,\n          fullWidth: true,\n          label: \"Email Address\",\n          margin: \"normal\",\n          name: \"email\",\n          type: \"email\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(touched.password && errors.password),\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.password,\n          helperText: touched.password && errors.password,\n          fullWidth: true,\n          label: \"Password\",\n          margin: \"normal\",\n          name: \"password\",\n          type: \"password\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          fullWidth: true,\n          size: \"large\",\n          variant: \"contained\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/maggiemccausland/Documents/GitHub/react-project-four/src/components/login/LoginForm.js"],"names":["React","Box","Button","TextField","Formik","Yup","modalStyle","position","top","left","transform","width","maxWidth","bgcolor","border","boxShadow","p","borderRadius","LoginForm","props","handleClose","console","log","email","password","object","shape","string","max","required","min","value","setErrors","setStatus","setSubmitting","success","err","error","submit","message","errors","values","handleSubmit","handleBlur","handleChange","isSubmitting","touched","Boolean"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,eAAvC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,QAAQ,EAAE,UADO;AAEjBC,EAAAA,GAAG,EAAE,KAFY;AAGjBC,EAAAA,IAAI,EAAE,KAHW;AAIjBC,EAAAA,SAAS,EAAE,uBAJM;AAKjBC,EAAAA,KAAK,EAAE,KALU;AAMjBC,EAAAA,QAAQ,EAAE,OANO;AAOjBC,EAAAA,OAAO,EAAE,kBAPQ;AAQjBC,EAAAA,MAAM,EAAE,gBARS;AASjBC,EAAAA,SAAS,EAAE,EATM;AAUjBC,EAAAA,CAAC,EAAE,CAVc;AAWjBC,EAAAA,YAAY,EAAE;AAXG,CAAnB;;AAcA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B;AACA,QAAMC,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAA1B;;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAEhB,UAAT;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbiB,QAAAA,KAAK,EAAE,iBADM;AAEbC,QAAAA,QAAQ,EAAE;AAFG,OADjB;AAKE,MAAA,gBAAgB,EAAEnB,GAAG,CAACoB,MAAJ,GAAaC,KAAb,CAAmB;AACnCH,QAAAA,KAAK,EAAElB,GAAG,CAACsB,MAAJ,GACJJ,KADI,CACE,4BADF,EAEJK,GAFI,CAEA,GAFA,EAGJC,QAHI,CAGK,gBAHL,CAD4B;AAKnCL,QAAAA,QAAQ,EAAEnB,GAAG,CAACsB,MAAJ,GACPG,GADO,CACH,CADG,EACA,0CADA,EAEPF,GAFO,CAEH,EAFG,EAEC,0CAFD,EAGPC,QAHO,CAGE,mBAHF;AALyB,OAAnB,CALpB;AAeE,MAAA,QAAQ,EAAE,CAACE,KAAD,EAAQ;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA;AAAxB,OAAR,KAAoD;AAC5D,YAAI;AACFb,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAW,UAAAA,SAAS,CAAC;AAAEE,YAAAA,OAAO,EAAE;AAAX,WAAD,CAAT;AACAD,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SAJD,CAIE,OAAOE,GAAP,EAAY;AACZf,UAAAA,OAAO,CAACgB,KAAR,CAAcD,GAAd;AACAH,UAAAA,SAAS,CAAC;AAAEE,YAAAA,OAAO,EAAE;AAAX,WAAD,CAAT;AACAH,UAAAA,SAAS,CAAC;AAAEM,YAAAA,MAAM,EAAEF,GAAG,CAACG;AAAd,WAAD,CAAT;AACAL,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SATD,SAUQ;AACN;AACAd,UAAAA,WAAW;AAEZ;AACF,OA/BH;AAAA,gBAiCG,CAAC;AACAoB,QAAAA,MADA;AAEAC,QAAAA,MAFA;AAGAC,QAAAA,YAHA;AAIAC,QAAAA,UAJA;AAKAC,QAAAA,YALA;AAMAC,QAAAA,YANA;AAOAC,QAAAA;AAPA,OAAD,kBASC;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAEJ,YAA3B;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAEK,OAAO,CAACD,OAAO,CAACvB,KAAR,IAAiBiB,MAAM,CAACjB,KAAzB,CADhB;AAEE,UAAA,MAAM,EAAEoB,UAFV;AAGE,UAAA,QAAQ,EAAEC,YAHZ;AAIE,UAAA,UAAU,EAAEE,OAAO,CAACvB,KAAR,IAAiBiB,MAAM,CAACjB,KAJtC;AAKE,UAAA,KAAK,EAAEkB,MAAM,CAAClB,KALhB;AAME,UAAA,SAAS,MANX;AAOE,UAAA,KAAK,EAAC,eAPR;AAQE,UAAA,MAAM,EAAC,QART;AASE,UAAA,IAAI,EAAC,OATP;AAUE,UAAA,IAAI,EAAC,OAVP;AAWE,UAAA,OAAO,EAAC;AAXV;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,SAAD;AACE,UAAA,KAAK,EAAEwB,OAAO,CAACD,OAAO,CAACtB,QAAR,IAAoBgB,MAAM,CAAChB,QAA5B,CADhB;AAEE,UAAA,MAAM,EAAEmB,UAFV;AAGE,UAAA,QAAQ,EAAEC,YAHZ;AAIE,UAAA,KAAK,EAAEH,MAAM,CAACjB,QAJhB;AAKE,UAAA,UAAU,EAAEsB,OAAO,CAACtB,QAAR,IAAoBgB,MAAM,CAAChB,QALzC;AAME,UAAA,SAAS,MANX;AAOE,UAAA,KAAK,EAAC,UAPR;AAQE,UAAA,MAAM,EAAC,QART;AASE,UAAA,IAAI,EAAC,UATP;AAUE,UAAA,IAAI,EAAC,UAVP;AAWE,UAAA,OAAO,EAAC;AAXV;AAAA;AAAA;AAAA;AAAA,gBAdF,eAiCE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,SAAS,MAFX;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,OAAO,EAAC,WAJV;AAKE,UAAA,IAAI,EAAC,QALP;AAME,UAAA,QAAQ,EAAEqB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4FD,CAhGD;;KAAM3B,S;AAkGN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { Box, Button, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst modalStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  maxWidth: \"500px\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\",\n};\n\nconst LoginForm = (props) => {\n  // const { closeHandler } = props;\n  const handleClose = () => console.log('close now');\n\n  return (\n    <Box sx={modalStyle}>\n      <Formik\n        initialValues={{\n          email: \"foo@example.com\",\n          password: \"password\",\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(\"This must be a valid email\")\n            .max(100)\n            .required(\"Email required\"),\n          password: Yup.string()\n            .min(6, \"Password must have at least 6 characters\")\n            .max(50, \"Password should not exceed 50 characters\")\n            .required(\"Password required\"),\n        })}\n        onSubmit={(value, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            console.log(\"success\");\n            setStatus({ success: true });\n            setSubmitting(false);\n          } catch (err) {\n            console.error(err);\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          } \n          finally {\n            // closeHandler();\n            handleClose();\n\n          }\n        }}\n      >\n        {({\n          errors,\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          isSubmitting,\n          touched,\n        }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              helperText={touched.email && errors.email}\n              value={values.email}\n              fullWidth\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              type=\"email\"\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.password}\n              helperText={touched.password && errors.password}\n              fullWidth\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              type=\"password\"\n              variant=\"outlined\"\n            />\n            {/* {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )} */}\n\n            <Button\n              color=\"primary\"\n              fullWidth\n              size=\"large\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Log In\n            </Button>\n          </form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}