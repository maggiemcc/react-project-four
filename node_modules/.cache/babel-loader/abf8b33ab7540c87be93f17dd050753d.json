{"ast":null,"code":"var _jsxFileName = \"/Users/maggiemccausland/Documents/GitHub/react-project-four/src/components/login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, Button, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  // position: \"absolute\",\n  // top: \"50%\",\n  // left: \"50%\",\n  // transform: \"translate(-50%, -50%)\",\n  margin: \"auto 5%\",\n  // marginTop: \"5%\",\n  width: \"80%\",\n  maxWidth: \"500px\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\"\n};\n\nconst LoginForm = props => {\n  _s();\n\n  const history = useHistory();\n\n  const handleClose = () => history.push('/welcome');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: modalStyle,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"foo@example.com\",\n          password: \"password\"\n        },\n        validationSchema: Yup.object().shape({\n          email: Yup.string().email(\"This must be a valid email\").max(100).required(\"Email required\"),\n          password: Yup.string().min(6, \"Password must have at least 6 characters\").max(50, \"Password should not exceed 50 characters\").required(\"Password required\")\n        }),\n        onSubmit: (value, {\n          setErrors,\n          setStatus,\n          setSubmitting\n        }) => {\n          try {\n            console.log(\"success\");\n            setStatus({\n              success: true\n            });\n            setSubmitting(false);\n          } catch (err) {\n            console.error(err);\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          } finally {\n            // closeHandler();\n            handleClose();\n          }\n        },\n        children: ({\n          errors,\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          isSubmitting,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            error: Boolean(touched.email && errors.email),\n            onBlur: handleBlur,\n            onChange: handleChange,\n            helperText: touched.email && errors.email,\n            value: values.email,\n            fullWidth: true,\n            label: \"Email Address\",\n            margin: \"normal\",\n            name: \"email\",\n            type: \"email\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: Boolean(touched.password && errors.password),\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.password,\n            helperText: touched.password && errors.password,\n            fullWidth: true,\n            label: \"Password\",\n            margin: \"normal\",\n            name: \"password\",\n            type: \"password\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            fullWidth: true,\n            size: \"large\",\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/maggiemccausland/Documents/GitHub/react-project-four/src/components/login/LoginForm.js"],"names":["React","Box","Button","TextField","Formik","Yup","useHistory","modalStyle","margin","width","maxWidth","bgcolor","border","boxShadow","p","borderRadius","LoginForm","props","history","handleClose","push","email","password","object","shape","string","max","required","min","value","setErrors","setStatus","setSubmitting","console","log","success","err","error","submit","message","errors","values","handleSubmit","handleBlur","handleChange","isSubmitting","touched","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Button, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory} from \"react-router-dom\";\n\nconst modalStyle = {\n  // position: \"absolute\",\n  // top: \"50%\",\n  // left: \"50%\",\n  // transform: \"translate(-50%, -50%)\",\n  margin: \"auto 5%\",\n  // marginTop: \"5%\",\n  width: \"80%\",\n  maxWidth: \"500px\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\",\n};\n\nconst LoginForm = (props) => {\n  const history = useHistory();\n  const handleClose = () => history.push('/welcome');\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n    <Box sx={modalStyle}>\n      <Formik\n        initialValues={{\n          email: \"foo@example.com\",\n          password: \"password\",\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(\"This must be a valid email\")\n            .max(100)\n            .required(\"Email required\"),\n          password: Yup.string()\n            .min(6, \"Password must have at least 6 characters\")\n            .max(50, \"Password should not exceed 50 characters\")\n            .required(\"Password required\"),\n        })}\n        onSubmit={(value, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            console.log(\"success\");\n            setStatus({ success: true });\n            setSubmitting(false);\n          } catch (err) {\n            console.error(err);\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          } \n          finally {\n            // closeHandler();\n            handleClose();\n\n          }\n        }}\n      >\n        {({\n          errors,\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          isSubmitting,\n          touched,\n        }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              helperText={touched.email && errors.email}\n              value={values.email}\n              fullWidth\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              type=\"email\"\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.password}\n              helperText={touched.password && errors.password}\n              fullWidth\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              type=\"password\"\n              variant=\"outlined\"\n            />\n            {/* {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )} */}\n\n            <Button\n              color=\"primary\"\n              fullWidth\n              size=\"large\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Log In\n            </Button>\n          </form>\n        )}\n      </Formik>\n    </Box>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}