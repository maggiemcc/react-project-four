{"ast":null,"code":"var _jsxFileName = \"/Users/maggiemccausland/Desktop/DGM3790/breaking-bad-react-app/src/components/login/LoginForm.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  //   textAlign: \"center\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  maxWidth: \"500px\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\"\n};\n\nconst LoginForm = props => {\n  //   const history = useHistory();\n  // const handleClose = () => history.push('/welcome');\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: modalStyle,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"foo@example.com\",\n        password: \"password\"\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid Email')\n      }),\n      onSubmit: (value, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          setStatus({\n            success: true\n          });\n          setSubmitting(false);\n        } catch (err) {\n          console.error(err);\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        }\n      },\n      children: ({\n        errors,\n        values,\n        handleSubmit,\n        handleBlur,\n        handleChange,\n        isSubmitting,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email Address\",\n          margin: \"normal\",\n          name: \"email\",\n          type: \"email\",\n          variant: \"outlined\",\n          error: Boolean(touched.email && errors.email),\n          oneBlur: handleBlur,\n          onChange: handleChange,\n          value: values.email,\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Password\",\n          margin: \"normal\",\n          name: \"password\",\n          type: \"password\",\n          variant: \"outlined\",\n          oneBlur: handleBlur,\n          onChange: handleChange,\n          value: values.password,\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          fullWidth: true,\n          size: \"large\",\n          variant: \"contained\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/maggiemccausland/Desktop/DGM3790/breaking-bad-react-app/src/components/login/LoginForm.js"],"names":["useHistory","Box","Button","TextField","Formik","Yup","modalStyle","position","top","left","transform","width","maxWidth","bgcolor","border","boxShadow","p","borderRadius","LoginForm","props","email","password","object","shape","string","value","setErrors","setStatus","setSubmitting","success","err","console","error","submit","message","errors","values","handleSubmit","handleBlur","handleChange","isSubmitting","touched","Boolean"],"mappings":"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","sourcesContent":["import { useHistory } from \"react-router-dom\";\nimport { Box, Button, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\n\nconst modalStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  //   textAlign: \"center\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  maxWidth: \"500px\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\",\n};\n\nconst LoginForm = (props) => {\n  //   const history = useHistory();\n  // const handleClose = () => history.push('/welcome');\n  return (\n    <Box sx={modalStyle}>\n      <Formik\n        initialValues={{\n          email: \"foo@example.com\",\n          password: \"password\",\n        }}\n        validationSchema={\n            Yup.object().shape({\n                email: Yup.string().email('Must be a valid Email')\n            })\n        }\n        onSubmit={(value, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            setStatus({ success: true });\n            setSubmitting(false);\n          } catch (err) {\n            console.error(err);\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({\n          errors,\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          isSubmitting,\n          touched,\n        }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <TextField\n              fullWidth\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              type=\"email\"\n              variant=\"outlined\"\n              error={Boolean(touched.email && errors.email)}\n              oneBlur={handleBlur}\n              onChange={handleChange}\n              value={values.email}\n            >\n              Email\n            </TextField>\n            <TextField\n              fullWidth\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              type=\"password\"\n              variant=\"outlined\"\n              oneBlur={handleBlur}\n              onChange={handleChange}\n              value={values.password}\n            >\n              Password\n            </TextField>\n            <Button\n              color=\"primary\"\n              fullWidth\n              size=\"large\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Log In\n            </Button>\n          </form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}